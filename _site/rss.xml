<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tompi's blog</title>
    <link>http://tompi.github.com/</link>
    <atom:link href="http://tompi.github.com/rss.xml" rel="self" type="application/rss+xml" />
    <description>Tompi's blog about computers and the web</description>
    <language>en-us</language>
    <pubDate>Mon, 02 Apr 2012 11:28:21 +0200</pubDate>
    <lastBuildDate>Mon, 02 Apr 2012 11:28:21 +0200</lastBuildDate>

    
    <item>
      <title>Generic cache wrapper for the asp.net HttpCache</title>
      <link>http://tompi.github.com/2012/04/02/Generic-ASP.NET-Cache-pattern.html</link>
      <pubDate>Mon, 02 Apr 2012 00:00:00 +0200</pubDate>
      <author>thomas.haukland@gmail.com (Tompi)</author>
      <guid>http://tompi.github.com/2012/04/02/Generic-ASP.NET-Cache-pattern</guid>
      <description>&lt;p&gt;I seem to search for this little nugget every now and again without finding it on the net, so here it is&amp;#8230;&lt;/p&gt;

&lt;h2 id='what_to_cache'&gt;What to cache&lt;/h2&gt;

&lt;p&gt;Typical usage is data for populating dropdown lists with options which doesn&amp;#8217;t change too often, like once a day. This is probably the most frequently used data from a database, so making the app hit the db only once per day(per list) can really make a difference if you have some load.&lt;/p&gt;

&lt;h2 id='how_to_cache'&gt;How to cache&lt;/h2&gt;

&lt;p&gt;The ASP.NET HttpCache is really simple and can be used for all types of .net applications(I have used it mainly in web-apps, but also in a wcf-project). The reason for having the caching logic isolated in a class is it&amp;#8217;s really easy to get the locking wrong.&lt;/p&gt;

&lt;h2 id='le_code'&gt;Le code&lt;/h2&gt;

&lt;p&gt;There really isn&amp;#8217;t much to it, except for the double checking.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Somecode(&amp;#39;hmm&amp;#39;);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your only concern using it is which lock-object to give it. I usually make a &amp;#8220;retriever&amp;#8221; class for each list I need, and give the cache the typeof(MyListRetriever) to use for locking.&lt;/p&gt;

&lt;p&gt;Here&amp;#8217;s a simple example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Somemorecode(&amp;#39;haha&amp;#39;, 1);&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    

  </channel>
</rss>
